.. _structure:

Structure
============

.. _sceneStructure:

Scene Hierarchy
----------------

	.. image:: /images/road/sceneStructure.png
	
.. _mainScene:
	
#. Main scene.
#. City debugger : contains all :ref:`debuggers <subsceneGenerator>` of the city.

	.. _hub:

#. Hub : contains :ref:`Entity Subscene Generator <subsceneGenerator>` (how to create :ref:`read more <cityCreation>`).
#. City settings initializer : contains :ref:`general settings <generalSettingsConfig>` of the `DOTS` city [moved to the `Config` tab].
#. Main scene configs (read more about :ref:`config editing <configEdit>` workflow).
#. Pools : contains all the entity presets.
#. Spawnpoint : spawnpoint of the player (assigned in the `PlayerSpawner`).

	.. _subscene:

#. Subscene (`EntitySubScene`) : subscene in which all of the entities get converted (generated by :ref:`Entity Subscene Generator <subsceneGenerator>`).
#. Subscene configs (read more about :ref:`config editing <configEdit>` workflow).
#. EntityRoadRoot : object root generated by :ref:`Entity Subscene Generator <subsceneGenerator>`.
#. Road : :ref:`road parent <roadParentInfo>` (read more about :ref:`road editing <roadEdit>` workflow).

Scene Components
----------------

.. _roadParentInfo:
	
Road Parent
~~~~~~~~~~~~

	.. image:: /images/road/installation/RoadParent.png

How To Use
""""""""""""""

You read more :ref:`here <roadInstallation>`.

Settings
""""""""""""""

| **Connection waypoint offset** : automatically adds a :ref:`waypoint <pathWaypointInfo>` at each selected offset to the :ref:`automatically <autoPathConnection>` created :ref:`paths <path>` (if the value greater than zero).
| **Connect segments** : creates the :ref:`automatically created paths <autoPathConnection>`.
| **Reset segments** : reset the :ref:`automatically created paths <autoPathConnection>`.
| **Connect pedestrian nodes** : automatically connects :ref:`pedestrian nodes <pedestrianNode>` that configured :ref:`auto-connection <pedestrianNodeConnections>`.
| **Add crossroads** : adding crossroad if missing.
| **Bake path data** : :ref:`bakes <bakingInfo>` road data. 
| **Clear unattached paths** : clear the :ref:`paths <path>` that are not connected to any a :ref:`TrafficNode <trafficNode>`.

.. _subsceneGenerator:

Entity Subscene Generator
~~~~~~~~~~~~

	.. image:: /images/road/installation/HubInfo.png

Where To Find
""""""""""""""

#. Create :ref:`city base <cityCreation>` **[if missing, optional step]**.
#. Select :ref:`Hub <hub>` on the scene.

How To Use
""""""""""""""

You read more :ref:`here <roadEntitySubscene>`.

Settings
""""""""""""""

| **Entity subscene save path** : save path of :ref:`subscene <subscene>`.
| **Entity subscene name** : name of :ref:`subscene <subscene>`.
| **Autosync configs** : on/off auto-sync config on :ref:`main scene <mainScene>` & :ref:`subscene <subscene>`.
| **Move tools** : on/off moving of following tools: :ref:`PedestrianNode Creator <pedestrianNodeCreator>`, `RoadSegmentPlacer`.
| **Move lights** : on/off moving of :ref:`subscene <trafficLightObject>`.
| **Move props** : on/off moving of :ref:`props <propsInfo>`.
| **Move surface** : on/off moving of the selected physics surface.
| **Copy physics shapes** : on/off feature of physics shape :ref:`cloning <physicsShapeTransfer>`.

Config
""""""""""""""

| **Copy to subscene** : :ref:`subscene <subscene>` configs will be synchronised with the :ref:`main scene <mainScene>`.
| **Copy from subscene** : :ref:`main scene <mainScene>` configs will be synchronised with the :ref:`subscene <subscene>`.

Buttons
""""""""""""""

| **Generate** : generates :ref:`subscene <subscene>`.
| **Move back** : move road from :ref:`subscene <subscene>` to the :ref:`main scene <mainScene>` (can be useful for editing roads in the :ref:`main scene <mainScene>` due to `Editor` performance).

PedestrianNode Transfer Service
~~~~~~~~~~~~

Tool for cloning :ref:`Pedestrian nodes <pedestrianNode>` that are part of the prefab from the :ref:`main scene <mainScene>` to the :ref:`subscene <subscene>` .

	.. image:: /images/road/installation/PedestrianNodeTransferService.png
	
	.. note:: For example, can be useful to separate the `Home prefab` asset and its attached :ref:`Pedestrian nodes <pedestrianNode>`.
	
How To Use
""""""""""""""

Automatically used by :ref:`Entity Subscene Generator <subsceneGenerator>`.

.. _physicsShapeTransfer:

PhysicsShape Transfer Service
~~~~~~~~~~~~

| Tool for cloning physical shapes from the :ref:`main scene <mainScene>` to the :ref:`subscene <subscene>`. 
| Also tool exists to maintain both the `legacy physical world <https://docs.unity3d.com/2022.2/Documentation/Manual/PhysicsOverview.html>`_ and the `DOTS physical world <https://docs.unity3d.com/2022.2/Documentation/Manual/PhysicsOverview.html>`_ at the same time, so `legacy colliders <https://docs.unity3d.com/ScriptReference/Collider.html>`_ and `DOTS colliders <https://docs.unity3d.com/Packages/com.unity.physics@1.0/manual/custom-shapes.html>`_ exist at the same time if you need to use `legacy colliders <https://docs.unity3d.com/ScriptReference/Collider.html>`_ in `MonoBehaviour <https://docs.unity3d.com/ScriptReference/MonoBehaviour.html>`_  classes.

Current project use cases:
	* Keep `legacy colliders <https://docs.unity3d.com/ScriptReference/Collider.html>`_ to work with :ref:`Legacy ragdoll <pedestrianRagdoll>`.
	* Cloning of physical shapes from :ref:`main scene <mainScene>` to split them into pieces subscene by using :ref:`SubSceneChunk Creator <subSceneCreator>` or cloning to :ref:`main subscene <subscene>` by using :ref:`Entity Subscene Generator <subsceneGenerator>`.

	.. note:: The tool can use only one tool at a time, either a :ref:`Entity Subscene Generator <subsceneGenerator>` or a :ref:`SubSceneChunk Creator <subSceneCreator>`.

	.. image:: /images/road/installation/PhysicsShapeTransferService.png
	
Settings
""""""""""""""

| **Clean components** : removes all components from the physics shape.
| **Clean childs** : removes all childs from the physics shape.
| **Search type** : searching shapes by layer or tag.

**Proccesing type** : 
	* **Stay previous** : cloning found `PhysicsShape <https://docs.unity3d.com/Packages/com.unity.physics@1.0/manual/custom-samples-physics-components.html>`_ or `Collider <https://docs.unity3d.com/ScriptReference/Collider.html>`_ to :ref:`subscene <subscene>`, useful to keep `legacy collider <https://docs.unity3d.com/ScriptReference/Collider.html>`_ and `Unity.Physics collider <https://docs.unity3d.com/Packages/com.unity.physics@1.0/manual/custom-samples-physics-components.html>`_ running at the same time.
	* **Disable collider** : cloning found `PhysicsShape <https://docs.unity3d.com/Packages/com.unity.physics@1.0/manual/custom-samples-physics-components.html>`_ or `Collider <https://docs.unity3d.com/ScriptReference/Collider.html>`_ to :ref:`subscene <subscene>` and disable it.

| **New layer** : assigns new layer for cloned shape.